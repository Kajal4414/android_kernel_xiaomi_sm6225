name: Build Kernel

on:
  push:
    branches:
      - "workflow"
    paths:
      - ".github/workflows/**"

jobs:
  build_kernel:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          # repository: "Kajal4414/android_kernel_xiaomi_sm6225"
          ref: "13.0"

      - name: Install Dependencies
        run: sudo apt-get install -y elfutils libarchive-tools

      - name: Setup AOSP Clang
        run: git clone --depth 1 https://gitlab.com/kei-space/clang/r522817.git clang-r522817

      - name: Setup KernelSU
        run: rm -rf KernelSU && curl -LSs "https://raw.githubusercontent.com/Kajal4414/KernelSU/main/kernel/setup.sh" | bash -

      - name: Compile Kernel
        run: |
          export KBUILD_BUILD_USER=nobody
          export KBUILD_BUILD_HOST=android-build
          export PATH="$(pwd)/clang-r522817/bin:$PATH"
          make O=out ARCH=arm64 vendor/spes-perf_defconfig CC=clang LD=ld.lld AS=llvm-as AR=llvm-ar NM=llvm-nm OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump STRIP=llvm-strip CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- LLVM=1 LLVM_IAS=1 Image.gz dtb.img dtbo.img -j$(nproc --all) 2> >(tee log.txt >&2) || exit $?

      - name: Package Kernel
        run: |
          ZIPNAME="Perf_KernelSU_$(date '+%d-%m-%Y')_$(git rev-parse --short=7 HEAD).zip"
          git clone -q https://github.com/Kajal4414/AnyKernel3.git -b murali
          cp out/arch/arm64/boot/{Image.gz,dtb.img,dtbo.img} AnyKernel3
          (cd AnyKernel3 && zip -r9 "../$ZIPNAME" * -x .git README.md *placeholder)
          if [ -f "$ZIPNAME" ]; then echo -e "\e[32mZIP: $ZIPNAME\e[0m"; else exit 1; fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Perf_KernelSU_${{ github.run_id }}
          path: Perf_KernelSU_*.zip
